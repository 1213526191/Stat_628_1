library(tidyverse)
library(car)
bf_ori<-read_csv("../data/BodyFat.csv")
bf<-bf_ori %>%
select(-IDNO, -DENSITY)
model=lm(BODYFAT~.,data=bf)
influenceIndexPlot(model, id.n=4) # 39th and 42th may be outliers
bf_df=as.data.frame(bf)
outliers=data.frame(
"ID"=c(39,42,182),
"Wrong_variable"=c("WEIGHT","HEIGHT","BODYFAT"),
"Wrong_data"=c(bf_df[39,"WEIGHT"],bf_df[42,"HEIGHT"],bf_df[182,"BODYFAT"]),
"min"=c(min(bf_df[,"WEIGHT"]),min(bf_df[,"HEIGHT"]),min(bf_df[,"BODYFAT"])),
"25%"=c(quantile(bf_df[,"WEIGHT"],.25),quantile(bf_df[,"HEIGHT"],.25),
quantile(bf_df[,"BODYFAT"],.25)),
"mean"=c(mean(bf_df[,"WEIGHT"]),mean(bf_df[,"HEIGHT"]),mean(bf_df[,"BODYFAT"])),
"75%"=c(quantile(bf_df[,"WEIGHT"],.75),quantile(bf_df[,"HEIGHT"],.75),
quantile(bf_df[,"BODYFAT"],.75)),
"max"=c(max(bf_df[,"WEIGHT"]),max(bf_df[,"HEIGHT"]),max(bf_df[,"BODYFAT"])))
print(outliers)
newbf<-bf[-c(39,42,182),]
set.seed(1111)
orders=sample(1:249)
newbf$group=rep(1,249)
newbf$group[orders[1:50]] = 1
newbf$group[orders[51:100]] = 2
newbf$group[orders[101:150]] = 3
newbf$group[orders[151:200]] = 4
newbf$group[orders[201:249]] = 5
write_csv(newbf,"../data/newbodyfat2.csv")
path = "../data/newbodyfat2.csv"
bf_ori = read_csv(path)
library(tidyverse)
library(car)
path = "../data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Correlation Plot (All Variables) ----------------------------------------
library(corrplot)
bf = bf_ori
corrplot.mixed(cor(bf),tl.cex=0.6)
# Correlation Plot (One Variable) -----------------------------------------
ggplot(bf, aes(ABDOMEN, BODYFAT)) +
geom_point()+
labs(x="ABDOMEN(cm)",y="Body Fat %",
title = "Scatterplot of Body Fat % and ABDOMEN(cm)")+
theme(plot.title = element_text(hjust = 0.5))
# Model Summary -----------------------------------------------------------
## estimated coefficients,standard errors
bf = bf_ori
model1=lm(BODYFAT~ABDOMEN,data=bf)
print(as.data.frame(summary(model1)$coefficients))
## R^2, p-values
model_information=c(summary(model1)$r.squared,
summary(model1)$adj.r.squared,
anova(model1)$'Pr(>F)'[1])%>%as.matrix()%>%t()
colnames(model_information)=c("R-square","Adj-R-square","p-value")
print((model_information))
## confidence intervals
print(confint(model1))
# Diagnostic --------------------------------------------------------------
source("diagPlot.R")
plot_total = diagPlot(model1)
grid.arrange(plot_total[[1]], plot_total[[2]], plot_total[[3]],
plot_total[[5]], ncol=2)
library(tidyverse)
library(car)
# Load data ---------------------------------------------------------------
path = "../data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Select Variable ---------------------------------------------------------
name_d = character()
bf = bf_ori[,-ncol(bf_ori)]
#basic model
bf2 = bf
for(i in 1:100){
model2=lm(BODYFAT~.,data=bf2)
a = summary(model2)
p_v = a$coefficients[,4]
if(all(p_v < 0.1)){
break
}
name_d = c(name_d, names(bf2)[which.max(p_v[2:length(p_v)])+1])
bf2 = bf %>%
select(-one_of(name_d))
names(bf2)
}
num = length(names(bf2)) - 1
names(bf2)
# R^2 ---------------------------------------------------------------------
newdata_lm = bf_ori %>%
select(-one_of(name_d))
bf = newdata_lm %>%
select(-group)
model1 = lm(BODYFAT ~ ., bf)
a = summary(model1)
# CV ----------------------------------------------------------------------
source("cv_information.R")
mse = cv_information(newdata_lm)
# Output ------------------------------------------------------------------
PV = c(mse, num, a$r.squared)
PV
library(tidyverse)
library(car)
# Load data ---------------------------------------------------------------
path = "../data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Select Variable ---------------------------------------------------------
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~ ., bf)
model.AIC <- step(model2, k=2)
newbf = model.AIC$model
num = ncol(newbf) - 1
# R^2 ---------------------------------------------------------------------
model_AIC=lm(BODYFAT ~ ., data=newbf)
a = summary(model_AIC)
# CV ----------------------------------------------------------------------
source("cv_information.R")
newbf$group = bf_ori$group
mse = cv_information(newbf)
# Output ------------------------------------------------------------------
AIC = c(mse, num, a$r.squared)
library(tidyverse)
source("method1_finalModel.R")
source("method2_pvalue.R")
source("method3_AIC.R")
source("method4_BIC.R")
source("method5_CP.R")
source("method6_PLS1.R")
source("method7_PLS2.R")
source("method8_NN.R")
mse = tibble(
OV = OV,
PV = PV,
AIC = AIC,
BIC = BIC,
CP = CP,
PLS1 = PLS1,
PLS2 = PLS2,
NN = NN,
DT = OV # Decision tree and one variable model are the same
)
mse
library(tidyverse)
source("method1_finalModel.R")
source("./method1_finalModel.R")
