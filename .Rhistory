pls1 = plsreg1(bf$BODYFAT, bf[,2:15], comps = 3)
# install.packages("plsdepot")
pls1 = plsreg1(bf[2:15], bf$BODYFAT, comps = 3)
pls1
pls1$R2
pls1$Q2
pls.RMSEP = RMSEP(model1, estimate="CV")
plot(pls.RMSEP, legendpos = "topright")
which.min(pls.RMSEP$val)
pls.eval
names(bf)
pls.eval=data.frame(obs=bf$BODYFAT, pred=bf[2,15])
defaultSummary(pls.eval)
??defaultSummary
library(caret)
pls.eval=data.frame(obs=bf$BODYFAT, pred=bf[2,15])
defaultSummary(pls.eval)
bf = bf_ori
mse = 0
library(pls)
bf = bf_ori %>%
select(-group)
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
library(pls)
bf = bf_ori %>%
select(-group)
model1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pls.RMSEP = RMSEP(model1, estimate="CV")
plot(pls.RMSEP, legendpos = "topright")
pls1.1_num = which.min(pls.RMSEP$val)
pls1.2_num = 3 # although 9 is the minimun, but we think 3 may be less enough
bf = bf_ori
mse = 0
for(i in 1:5){
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group)
model1 <- plsr(BODYFAT ~ ., data = bf_train, validation = "LOO")
output = predict(model1, ncomp = pls1.1_num, newdata = bf_test)
mse = mse + sum((output - bf_test$BODYFAT)^2)
}
pls1.1_mse = mse/249
pls1.1_mse
bf = bf_ori
mse = 0
for(i in 1:5){
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group)
model1 <- plsr(BODYFAT ~ ., data = bf_train, validation = "LOO")
output = predict(model1, ncomp = pls1.2_num, newdata = bf_test)
mse = mse + sum((output - bf_test$BODYFAT)^2)
}
pls1.2_mse = mse/249
pls1.2_mse
PLS_mse = pls1.2_mse
PLS_num = pls1.2_mse
library(pls)
bf = bf_ori %>%
select(-group, -HEIGHT)
model1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pls.RMSEP = RMSEP(model1, estimate="CV")
plot(pls.RMSEP, legendpos = "topright")
pls1.1_num = which.min(pls.RMSEP$val)
pls1.1_num
pls1.2_num
pls1.2_num = 3 # although 12 is the minimun, but we think 3 may be less enough
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
library(pls)
bf = bf_ori %>%
select(-group, -HEIGHT)
model1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pls.RMSEP = RMSEP(model1, estimate="CV")
plot(pls.RMSEP, legendpos = "topright")
pls1.1_num = which.min(pls.RMSEP$val)
pls1.2_num = 3 # although 12 is the minimun, but we think 3 may be less enough
pls1.1_num
pls1.1_num
pls1.2_num = 3 # although 12 is the minimun, but we think 3 may be less enough
bf = bf_ori
mse = 0
for(i in 1:5){
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group, -HEIGHT)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group, -HEIGHT)
model1 <- plsr(BODYFAT ~ ., data = bf_train, validation = "LOO")
output = predict(model1, ncomp = pls1.1_num, newdata = bf_test)
mse = mse + sum((output - bf_test$BODYFAT)^2)
}
pls1.1_mse = mse/249
bf = bf_ori
mse = 0
for(i in 1:5){
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group, -HEIGHT)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group, -HEIGHT)
model1 <- plsr(BODYFAT ~ ., data = bf_train, validation = "LOO")
output = predict(model1, ncomp = pls1.1_num, newdata = bf_test)
mse = mse + sum((output - bf_test$BODYFAT)^2)
}
pls1.1_mse = mse/249
pls1.1_mse
bf = bf_ori
mse = 0
for(i in 1:5){
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group, -HEIGHT)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group, -HEIGHT)
model1 <- plsr(BODYFAT ~ ., data = bf_train, validation = "LOO")
output = predict(model1, ncomp = pls1.2_num, newdata = bf_test)
mse = mse + sum((output - bf_test$BODYFAT)^2)
}
pls1.2_mse = mse/249
pls1.2_mse
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~ ., bf)
model.AIC <- step(model2, k=2)
model.AIC$model
type(model.AIC$model)
class(model.AIC$model)
newbf = model.AIC$model
model_AIC=lm(BODYFAT ~ ., data=newbf)
source("cv_information.R")
mse = cv_information(newbf)
newbf$group = bf_ori$group
mse = cv_information(newbf)
mse
library(tidyverse)
library(car)
# Load data ---------------------------------------------------------------
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Select Variable ---------------------------------------------------------
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~ ., bf)
model.BIC <- step(model2, k=log(249))
newbf = model.BIC$model
num = ncol(newbf) - 1
# R^2 ---------------------------------------------------------------------
model_AIC=lm(BODYFAT ~ ., data=newbf)
a = summary(model_BIC)
# CV ----------------------------------------------------------------------
source("cv_information.R")
newbf$group = bf_ori$group
mse = cv_information(newbf)
# Output ------------------------------------------------------------------
PV_mse = mse
PV_num = num
PV_R = a$r.squared
library(tidyverse)
library(car)
# Load data ---------------------------------------------------------------
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Select Variable ---------------------------------------------------------
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~ ., bf)
model_BIC <- step(model2, k=log(249))
newbf = model_BIC$model
num = ncol(newbf) - 1
# R^2 ---------------------------------------------------------------------
model_AIC=lm(BODYFAT ~ ., data=newbf)
a = summary(model_BIC)
# CV ----------------------------------------------------------------------
source("cv_information.R")
newbf$group = bf_ori$group
mse = cv_information(newbf)
# Output ------------------------------------------------------------------
PV_mse = mse
PV_num = num
PV_R = a$r.squared
PV_mse
PV_num
PV_R
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~., bf)
bf2 = as.data.frame(bf)
X <- model.matrix(model2)[,-1]
Y <- bf2[,1]
library(leaps) # for leaps()
library(faraway) # for Cpplot()
g <- leaps(X, Y, nbest=1)
Cpplot(g)
#1 3 6 7 14
bf_cp = bf[,c(1,2,4,7,8,15)]
names(bf_cp)
source("cv_information.R")
bf_cp$group = bf_ori$group
mse = cv_information(newbf)
mse = cv_information(bf_cp)
mse
library(tidyverse)
library(car)
# Load data ---------------------------------------------------------------
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Select Variable ---------------------------------------------------------
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~., bf)
bf2 = as.data.frame(bf)
X <- model.matrix(model2)[,-1]
Y <- bf2[,1]
library(leaps) # for leaps()
library(faraway) # for Cpplot()
g <- leaps(X, Y, nbest=1)
Cpplot(g)
#1 3 6 7 14
bf_cp = bf[,c(1,2,4,7,8,15)]
# R^2 ---------------------------------------------------------------------
model_cp=lm(BODYFAT~.,data=bf_cp)
a = summary(model_cp)
# CV ----------------------------------------------------------------------
source("cv_information.R")
bf_cp$group = bf_ori$group
mse = cv_information(bf_cp)
# Output ------------------------------------------------------------------
PV_mse = mse
PV_num = num
PV_R = a$r.squared
PV_mse
PV_R
PV_num
bf_cp
PV_mse
nn_mse = mean(mse)
source("r_square.R")
model1$fitted.values
?plsr
model1.1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO", ncomp = pls1.1_num)
pred = model1.1$fitted.values
a = r_square(pred, bf$BODYFAT)
a
pred
pred
pls1.1_num
pred[1]
pred["12  comps"]
pred["12 comps"]
pred["12comps"]
pred = predict(model1.1, ncomp = pls1.1_num, newdata = bf)
a = r_square(pred, bf$BODYFAT)
a
library(pls)
bf = bf_ori %>%
select(-group)
model1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pls.RMSEP = RMSEP(model1, estimate="CV")
plot(pls.RMSEP, legendpos = "topright")
pls1.1_num = which.min(pls.RMSEP$val)
pls1.2_num = 3 # although 9 is the minimun, but we think 3 may be less enough
pls1.1_num
source("r_square.R")
model1.1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pred1 = predict(model1.1, ncomp = pls1.1_num, newdata = bf)
a1 = r_square(pred1, bf$BODYFAT)
pred2 = predict(model1.1, ncomp = pls1.2_num, newdata = bf)
a2 = r_square(pred2, bf$BODYFAT)
a1
a2
library(pls)
bf = bf_ori %>%
select(-group, -HEIGHT)
model1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pls.RMSEP = RMSEP(model1, estimate="CV")
plot(pls.RMSEP, legendpos = "topright")
pls1.1_num = which.min(pls.RMSEP$val)
pls1.2_num = 3 # although 12 is the minimun, but we think 3 may be less enough
pls1.1_num
pls1.2_num
source("r_square.R")
model1.1 <- plsr(BODYFAT ~ ., data = bf, validation = "LOO")
pred1 = predict(model1.1, ncomp = pls1.1_num, newdata = bf)
a1 = r_square(pred1, bf$BODYFAT)
pred2 = predict(model1.1, ncomp = pls1.2_num, newdata = bf)
a2 = r_square(pred2, bf$BODYFAT)
a1
a2
dim(bf)
library(tidyverse)
library(tidyverse)
source("method1_finalModel.R")
source("method1_pvalue.R")
source("method2_pvalue.R")
source("method3_AIC.R")
source("method4_BIC.R")
source("method5_CP.R")
source("method6_PLS1.R")
source("method7_PLS2.R")
source("method8_NN.R")
library(tidyverse)
library(car)
library(foreign)
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
mse = numeric(20)
j=1
a = character(5)
i=1
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group)
write.arff(bf_train, "train.arff")
write.arff(bf_test, "test.arff")
a[i] = system(paste('./neuralnet/neuralnet2', j,  sep = " "), intern = TRUE)
a[i] = system(paste('./neuralnet/neuralnet2', j,  sep = " "), intern = TRUE)
a[i] = system(paste('./neuralnet/neuralnet2', j,  sep = " "), intern = TRUE)
a = character(5)
bf_nn = bf %>%
select(AGE:group, BODYFAT)
bf_train = bf_nn %>%
filter(group != i) %>%
select(-group)
bf_test = bf_nn %>%
filter(group == i) %>%
select(-group)
write.arff(bf_train, "train.arff")
write.arff(bf_test, "test.arff")
a[i] = system(paste('./neuralnet/neuralnet2', j,  sep = " "), intern = TRUE)
a[i] = system(paste('./neuralnet2', j,  sep = " "), intern = TRUE)
a
source("method8_NN.R")
source("method1_finalModel.R")
source("method2_pvalue.R")
OV = OV,
PV = PV
OV
One = OV,
PV = PV
mse = tibble{
One = OV,
PV = PV
}
mse = tibble{
One = OV,
PV = PV
}
library(tidyverse)
OV
"OV" = OV,
PV = PV
"OV" = OV
mse = tibble{
"OV" = OV
"PV" = PV
}
"OV" = OV,
"PV" = PV
list(OV)
"OV" = list(OV),
"PV" = PV
mse = tibble(
OV = OV,
PV = PV
)
mse
library(tidyverse)
source("method1_finalModel.R")
source("method2_pvalue.R")
source("method3_AIC.R")
source("method4_BIC.R")
source("method5_CP.R")
source("method6_PLS1.R")
source("method7_PLS2.R")
OV
PV
AIC
BIC
CP
PLS1
PLS2
source("method6_PLS1.R")
source("method7_PLS2.R")
source("method8_NN.R")
source("method8_NN.R")
source("method8_NN.R")
mse = tibble(
OV = OV,
PV = PV,
AIC = AIC,
BIC = BIC,
CP = CP,
PLS1 = PLS1,
PLS2 = PLS2,
NN = NN
)
mse
library(tidyverse)
library(tidyverse)
library(car)
# Load data ---------------------------------------------------------------
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
# Select Variable ---------------------------------------------------------
bf = bf_ori %>%
select(-group)
model2 = lm(BODYFAT ~., bf)
bf2 = as.data.frame(bf)
X <- model.matrix(model2)[,-1]
Y <- bf2[,1]
library(leaps) # for leaps()
library(faraway) # for Cpplot()
g <- leaps(X, Y, nbest=1)
Cpplot(g)
#1 3 6 7 14
bf_cp = bf[,c(1,2,4,7,8,15)]
# R^2 ---------------------------------------------------------------------
model_cp=lm(BODYFAT~.,data=bf_cp)
a = summary(model_cp)
# CV ----------------------------------------------------------------------
source("cv_information.R")
bf_cp$group = bf_ori$group
mse = cv_information(bf_cp)
# Output ------------------------------------------------------------------
CP = c(mse, num, a$r.squared)
mse
bf = bf_ori %>%
select(-group)
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
library(tidyverse)
library(car)
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
bf = bf_ori %>%
select(-group)
bf.names = names(bf)
bf.names
bf = bf_ori
bf.names = names(bf)
role = rep("n", ncol(bf))
role[1] = "d"
role[16] = "x"
mse = tibble(
OV = OV,
PV = PV,
AIC = AIC,
BIC = BIC,
CP = CP,
PLS1 = PLS1,
PLS2 = PLS2,
NN = NN,
DT = OV # Decision tree and one variable model are the same
)
library(tidyverse)
library(car)
path = "data/newbodyfat2.csv"
bf_ori = read_csv(path)
bf = bf_ori
bf.names = names(bf)
role = rep("n", ncol(bf))
role[1] = "d"
role[16] = "x"
write_csv(bf, "bf.csv")
write("bf.csv","bfdsc.txt")
write("NA",file="bfdsc.txt",append=TRUE)
write("2",file="bfdsc.txt",append=TRUE)
write.table(cbind(1:ncol(bf),bf.names,role),
file="bfdsc.txt",append=TRUE,
row.names=FALSE,col.names=FALSE,quote=FALSE)
system("./guide < DecisionTree.txt > log.txt")
system("./guide < DecisionTree.txt > log.txt")
bf = bf_ori
bf.names = names(bf)
role = rep("n", ncol(bf))
role[1] = "d"
role[16] = "x"
write_csv(bf, "bf.csv")
write("bf.csv","bfdsc.txt")
write("NA",file="bfdsc.txt",append=TRUE)
write("2",file="bfdsc.txt",append=TRUE)
write.table(cbind(1:ncol(bf),bf.names,role),
file="bfdsc.txt",append=TRUE,
row.names=FALSE,col.names=FALSE,quote=FALSE)
system("./guide < DecisionTree.txt > log.txt")
system("rm bfdsc.txt output.txt tree.tex fit.txt bf.csv log.txt")
